{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETED, GET_REPOS } from \"./types\"; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //GET ALL PROFILES\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //GET ALL PROFILES BY ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5000/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //GET GITHUB REPOSE\n\nexport const getGithubRepose = username => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5000/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // CREATE OR UPDATE PROFILE\n\nexport const createProfile = function (formData, history) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.post(\"http://localhost:5000/api/profile\", formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n      if (!edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // //ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"http://localhost:5000/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // //ADD EDUCATION\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"http://localhost:5000/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // //DELETE EXPERIENCE\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //DELETE EDUCATION\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education  Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // //DELETE ACCOUNT // PROFILE //\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone')) {\n    try {\n      const res = await axios.delete(\"http://localhost:5000/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanately deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/socialmedia/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepose","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {setAlert} from \"./alert\";\n\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n    GET_REPOS,\n\n} from \"./types\";\n\n//GET CURRENT USERS PROFILE\n\n\nexport const getCurrentProfile=()=>async dispatch=>{\n\n        try {\n            const res=await axios.get('http://localhost:5000/api/profile/me')\n            \n            dispatch({\n                type:GET_PROFILE,\n                payload:res.data\n            });\n            \n        } catch (err) {\n            \n            dispatch({\n                type:PROFILE_ERROR,\n                payload: {msg:err.response.statusText,status:err.response.status}\n            })\n        }\n\n}\n\n//GET ALL PROFILES\n\n\nexport const getProfiles=()=>async dispatch=>{\n    \n    dispatch({type:CLEAR_PROFILE})\n\n    try {\n        const res=await axios.get('http://localhost:5000/api/profile')\n        \n        dispatch({\n            type:GET_PROFILES,\n            payload:res.data\n        });\n        \n    } catch (err) {\n        \n        dispatch({\n            type:PROFILE_ERROR,\n            payload: {msg:err.response.statusText,status:err.response.status}\n        })\n    }\n\n}\n\n\n//GET ALL PROFILES BY ID\n\nexport const getProfileById=userId=>async dispatch=>{\n\n    try {\n        const res=await axios.get(`http://localhost:5000/api/profile/user/${userId}`)\n        \n        dispatch({\n            type:GET_PROFILES,\n            payload:res.data\n        });\n        \n    } catch (err) {\n        \n        dispatch({\n            type:PROFILE_ERROR,\n            payload: {msg:err.response.statusText,status:err.response.status}\n        })\n    }\n\n}\n\n//GET GITHUB REPOSE\n\nexport const getGithubRepose=username=>async dispatch=>{\n\n    try {\n        const res=await axios.get(`http://localhost:5000/api/profile/github/${username}`)\n        \n        dispatch({\n            type:GET_REPOS,\n            payload:res.data\n        });\n        \n    } catch (err) {\n        \n        dispatch({\n            type:PROFILE_ERROR,\n            payload: {msg:err.response.statusText,status:err.response.status}\n        })\n    }\n\n}\n\n\n\n\n\n\n// CREATE OR UPDATE PROFILE\n\nexport const createProfile=( formData,history,edit=false)=>async dispatch=>{\n    try {\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const res=await axios.post(\"http://localhost:5000/api/profile\",formData,config);\n\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        });\n\n        dispatch(setAlert(edit ? \"Profile Updated\":\"Profile Created\",\"success\"));\n\n        if(!edit){\n            history.push('/dashboard')\n        }\n\n    } catch (err) {\n\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })\n        \n    }\n};\n\n// //ADD EXPERIENCE\n\nexport const  addExperience=(formData,history)=>async dispatch=>{\n\n    try {\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const res=await axios.put(\"http://localhost:5000/api/profile/experience\",formData,config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        });\n\n        dispatch(setAlert(\"Experience Added\",\"success\"));\n\n            history.push('/dashboard')\n\n    } catch (err) {\n\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })\n        \n    }\n\n}\n\n// //ADD EDUCATION\n\nexport const  addEducation=(formData,history)=>async dispatch=>{\n\n    try {\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const res=await axios.put(\"http://localhost:5000/api/profile/education\",formData,config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        });\n\n        dispatch(setAlert(\"Education Added\",\"success\"));\n\n            history.push('/dashboard')\n\n    } catch (err) {\n\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })\n        \n    }\n\n}\n\n\n// //DELETE EXPERIENCE\n\n\nexport const deleteExperience= id => async  dispatch=>{\n    try {\n        const res=await axios.delete(`http://localhost:5000/api/profile/experience/${id}`)\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n        dispatch(setAlert(\"Experience Removed\",\"success\"));\n\n        \n    } catch (err) {\n        \n        dispatch({\n        type:PROFILE_ERROR,\n        payload:{msg:err.response.statusText,status:err.response.status}\n    })  \n    }\n}\n\n//DELETE EDUCATION\n\nexport const deleteEducation= id => async  dispatch=>{\n    try {\n        const res=await axios.delete(`http://localhost:5000/api/profile/education/${id}`)\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n        dispatch(setAlert(\"Education  Removed\",\"success\"));\n\n        \n    } catch (err) {\n        \n        dispatch({\n        type:PROFILE_ERROR,\n        payload:{msg:err.response.statusText,status:err.response.status}\n    })  \n    }\n}\n\n\n\n// //DELETE ACCOUNT // PROFILE //\n\n\nexport const deleteAccount= () => async  dispatch=>{\n    \n\n    if(window.confirm('Are you sure? This can NOT be undone')){\n\n         try {\n            const res=await axios.delete(\"http://localhost:5000/api/profile\");\n\n            dispatch({type:CLEAR_PROFILE });\n            dispatch({type:ACCOUNT_DELETED})\n\n            dispatch(setAlert(\"Your account has been permanately deleted\"));\n\n            \n        } catch (err) {\n            \n            dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })  \n        }\n        }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}