{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Fragment, useEffect } from \"react\"; // import {Routes , Route,Router} from 'react-router-dom'\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from \"./componets/layout/Navbar\";\nimport Landing from \"./componets/layout/Landing\";\nimport Register from \"./componets/auth/Register\";\nimport Login from \"./componets/auth/Login\";\nimport Alert from \"./componets/layout/Alert\"; //REDUX\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport Dashboard from \"./componets/dashboard/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    store.dispatch(loadUser);\n  }, []); // [] means =>If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) \n  //as a second argument. This tells React that your effect doesn’t depend\n  // on any values from props or state, so it never needs to re-run.\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/register\",\n              component: Register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/dashboard\",\n              component: Dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) // <Provider store={store}>\n  // <div  className=\"App\">\n  // <Fragment>\n  // <Navbar/>\n  // <Routes>\n  //   <Route path=\"/\" element={<Landing /> } />\n  // </Routes>\n  // <section className=\"container\">\n  // <Alert />\n  // <Routes>\n  // <Route  path=\"/register\" element={<Register/>} />\n  // <Route  path=\"/login\" element={<Login/>} />\n  // </Routes>\n  // </section>\n  // </Fragment>\n  // </div>\n  // </Provider>\n  ;\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App; // const App = () =>\n// <Router>\n// <Fragment >\n//       <Navbar/>\n//       <Route exact path = '/' component={Landing}/>\n//     </Fragment>\n// </Router>\n//   // <Fragment>\n//   //   <Navbar />\n//   //   <Landing />\n//   // </Fragment>\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Navbar","Landing","Register","Login","Alert","Provider","store","loadUser","setAuthToken","Dashboard","localStorage","token","App","dispatch"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC,C,CACA;AACA;;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,KAAhC,EAAsCC,MAAtC,QAAmD,kBAAnD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CAEA;;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAEA,IAAGC,YAAY,CAACC,KAAhB,EAAsB;AACpBH,EAAAA,YAAY,CAACE,YAAY,CAACC,KAAd,CAAZ;AACD;;AAID,SAASC,GAAT,GAAe;AAAA;;AACbjB,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,KAAK,CAACO,QAAN,CAAeN,QAAf;AACD,GAFQ,EAEP,EAFO,CAAT,CADa,CAKb;AACA;AACA;;AAEA,sBAEE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAGD,KAAlB;AAAA,2BACA,QAAC,MAAD;AAAA,6BACA,QAAC,QAAD;AAAA,gCACM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADN,eAEM,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAApB;AAAwB,UAAA,SAAS,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFN,eAGM;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,WAAlB;AAA8B,cAAA,SAAS,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,YAAZ;AAAyB,cAAA,SAAS,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF,CAwBM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCN;AA2CD;;GApDQG,G;;KAAAA,G;AAsDT,eAAeA,GAAf,C,CAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["\nimport './App.css';\nimport React,{Fragment,useEffect} from \"react\";\n// import {Routes , Route,Router} from 'react-router-dom'\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Navbar from \"./componets/layout/Navbar\"\nimport Landing from \"./componets/layout/Landing\"\nimport Register from \"./componets/auth/Register\"\nimport Login from \"./componets/auth/Login\";\nimport Alert from \"./componets/layout/Alert\";\n\n//REDUX\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport Dashboard from \"./componets/dashboard/Dashboard\"\n\nif(localStorage.token){\n  setAuthToken(localStorage.token);\n}\n\n\n\nfunction App() {\n  useEffect(()=>{\n    store.dispatch(loadUser)\n  },[])\n\n  // [] means =>If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) \n  //as a second argument. This tells React that your effect doesn’t depend\n  // on any values from props or state, so it never needs to re-run.\n\n  return (\n\n    <Provider store ={store}>\n    <Router>\n    <Fragment >\n          <Navbar/>\n          <Route exact path = '/' component={Landing}/>\n          <section className='container'>\n            <Alert/>\n            <Switch>\n              <Route exact path=\"/register\" component={Register}/>\n              <Route path=\"/login\" component={Login}/> \n              <Route path=\"/dashboard\" component={Dashboard}/> \n             {/* <PrivateRoute path='/dashboard' component={Dashboard}/>*/ }\n                {/*<PrivateRoute path ='/create-profile' component={CreateProfile}/>*/}\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n      </Provider>\n\n\n\n\n        // <Provider store={store}>\n        // <div  className=\"App\">\n        // <Fragment>\n        // <Navbar/>\n        // <Routes>\n        //   <Route path=\"/\" element={<Landing /> } />\n        // </Routes>\n        // <section className=\"container\">\n        // <Alert />\n        // <Routes>\n        // <Route  path=\"/register\" element={<Register/>} />\n        // <Route  path=\"/login\" element={<Login/>} />\n        // </Routes>\n        // </section>\n        // </Fragment>\n        // </div>\n        // </Provider>\n\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n// const App = () =>\n\n// <Router>\n// <Fragment >\n//       <Navbar/>\n//       <Route exact path = '/' component={Landing}/>\n//     </Fragment>\n// </Router>\n//   // <Fragment>\n//   //   <Navbar />\n//   //   <Landing />\n//   // </Fragment>\n\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}