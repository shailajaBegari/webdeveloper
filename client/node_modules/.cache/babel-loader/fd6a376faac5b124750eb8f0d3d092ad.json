{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETED } from \"./types\"; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // // CREATE OR UPDATE PROFILE\n// export const createProfile=( formData,history,edit=false)=>async dispatch=>{\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.post(\"http://localhost:5000/api/profile\",formData,config);\n//         dispatch({\n//             type:GET_PROFILE,\n//             payload:res.data\n//         });\n//         dispatch(setAlert(edit ? \"Profile Updated\":\"Profile Created\",\"success\"));\n//         if(!edit){\n//             history.push('/dashboard')\n//         }\n//     } catch (err) {\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n//     }\n// };\n// //ADD EXPERIENCE\n// export const  addExperience=(formData,history)=>async dispatch=>{\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/experience\",formData,config);\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n//         dispatch(setAlert(\"Experience Added\",\"success\"));\n//             history.push('/dashboard')\n//     } catch (err) {\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n//     }\n// }\n// //ADD EDUCATION\n// export const  addEducation=(formData,history)=>async dispatch=>{\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/education\",formData,config);\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n//         dispatch(setAlert(\"Education Added\",\"success\"));\n//             history.push('/dashboard')\n//     } catch (err) {\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n//     }\n// }\n// //DELETE EXPERIENCE\n// export const deleteExperience= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/experience/${id}`)\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Experience Removed\",\"success\"));\n//     } catch (err) {\n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n// //DELETE EDUCATION\n// export const deleteEducation= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/education/${id}`)\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Education  Removed\",\"success\"));\n//     } catch (err) {\n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n// //DELETE ACCOUNT // PROFILE //\n// export const deleteAccount= () => async  dispatch=>{\n//     if(window.confirm('Are you sure? This can NOT be undone')){\n//          try {\n//             const res=await axios.delete(\"http://localhost:5000/api/profile\");\n//             dispatch({type:CLEAR_PROFILE });\n//             dispatch({type:ACCOUNT_DELETED})\n//             dispatch(setAlert(\"Your account has been permanately deleted\"));\n//         } catch (err) {\n//             dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })  \n//         }\n//         }\n// }","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,SACIC,WADJ,EAEIC,aAFJ,EAEkBC,aAFlB,EAGIC,cAHJ,EAIIC,eAJJ,QAMO,SANP,C,CAQA;;AAGA,OAAO,MAAMC,iBAAiB,GAAC,MAAI,MAAMC,QAAN,IAAgB;AAE3C,MAAI;AACA,UAAMC,GAAG,GAAC,MAAMT,KAAK,CAACU,GAAN,CAAU,sCAAV,CAAhB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,WADA;AAELU,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AAEVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACR,aADA;AAELS,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAACD,GAAG,CAACE,QAAJ,CAAaC,UAAlB;AAA6BC,QAAAA,MAAM,EAACJ,GAAG,CAACE,QAAJ,CAAaE;AAAjD;AAFJ,KAAD,CAAR;AAIH;AAER,CAlBM,C,CAqsourcesContent":["import axios from \"axios\";\nimport {setAlert} from \"./alert\";\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED\n\n} from \"./types\";\n\n//GET CURRENT USERS PROFILE\n\n\nexport const getCurrentProfile=()=>async dispatch=>{\n\n        try {\n            const res=await axios.get('http://localhost:5000/api/profile/me')\n            \n            dispatch({\n                type:GET_PROFILE,\n                payload:res.data\n            });\n            \n        } catch (err) {\n            \n            dispatch({\n                type:PROFILE_ERROR,\n                payload: {msg:err.response.statusText,status:err.response.status}\n            })\n        }\n\n}\n\n\n// // CREATE OR UPDATE PROFILE\n\n// export const createProfile=( formData,history,edit=false)=>async dispatch=>{\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.post(\"http://localhost:5000/api/profile\",formData,config);\n\n//         dispatch({\n//             type:GET_PROFILE,\n//             payload:res.data\n//         });\n\n//         dispatch(setAlert(edit ? \"Profile Updated\":\"Profile Created\",\"success\"));\n\n//         if(!edit){\n//             history.push('/dashboard')\n//         }\n\n//     } catch (err) {\n\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n        \n//     }\n// };\n\n// //ADD EXPERIENCE\n\n// export const  addExperience=(formData,history)=>async dispatch=>{\n\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/experience\",formData,config);\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n\n//         dispatch(setAlert(\"Experience Added\",\"success\"));\n\n//             history.push('/dashboard')\n\n//     } catch (err) {\n\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n        \n//     }\n\n// }\n\n// //ADD EDUCATION\n\n// export const  addEducation=(formData,history)=>async dispatch=>{\n\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/education\",formData,config);\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n\n//         dispatch(setAlert(\"Education Added\",\"success\"));\n\n//             history.push('/dashboard')\n\n//     } catch (err) {\n\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n        \n//     }\n\n// }\n\n\n// //DELETE EXPERIENCE\n\n\n// export const deleteExperience= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/experience/${id}`)\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Experience Removed\",\"success\"));\n\n        \n//     } catch (err) {\n        \n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n\n// //DELETE EDUCATION\n\n// export const deleteEducation= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/education/${id}`)\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Education  Removed\",\"success\"));\n\n        \n//     } catch (err) {\n        \n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n\n\n\n// //DELETE ACCOUNT // PROFILE //\n\n\n// export const deleteAccount= () => async  dispatch=>{\n    \n\n//     if(window.confirm('Are you sure? This can NOT be undone')){\n\n//          try {\n//             const res=await axios.delete(\"http://localhost:5000/api/profile\");\n\n//             dispatch({type:CLEAR_PROFILE });\n//             dispatch({type:ACCOUNT_DELETED})\n\n//             dispatch(setAlert(\"Your account has been permanately deleted\"));\n\n            \n//         } catch (err) {\n            \n//             dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })  \n//         }\n//         }\n\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}