{"ast":null,"code":"import axios from \"axios\"; // import setAuthToken from \"../utils/setAuthToken\";\n\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dis;\n  }\n}; // REGISTER USER\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/users\", body, config);\n      console.log(res);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","dis","register","name","email","password","config","headers","body","JSON","stringify","post","console","log","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP;AAMA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AAGA,OAAO,MAAMC,QAAQ,GAAC,MAAI,MAAMC,QAAN,IAAgB;AAEtC,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AACD,MAAI;AACA,UAAMC,GAAG,GAAC,MAAMX,KAAK,CAACY,GAAN,CAAU,WAAV,CAAhB;AAEAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET,WADD;AAELU,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAMH,GATD,CASE,OAAOC,GAAP,EAAY;AACVC,IAAAA,GAAG;AACN;AACJ,CAjBM,C,CAoBP;;AAEA,OAAO,MAAMC,QAAQ,GAAC;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAD;AAAA,SAAyB,MAAMb,QAAN,IAAgB;AACvD,UAAMc,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADC,KAAb;AAQR,UAAMC,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,IAAD;AAAMC,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAAf,CAAX;;AACQ,QAAI;AACA,YAAMV,GAAG,GAAC,MAAMX,KAAK,CAAC2B,IAAN,CAAW,iCAAX,EAA6CH,IAA7C,EAAkDF,MAAlD,CAAhB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AAEAH,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAACX,gBADA;AAELY,QAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,OAAD,CAAR;AAOH,KAXD,CAWE,OAAOC,GAAP,EAAY;AACV,YAAMc,MAAM,GAACd,GAAG,CAACe,QAAJ,CAAahB,IAAb,CAAkBe,MAA/B;;AACA,UAAGA,MAAH,EAAU;AACNA,QAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAEzB,QAAQ,CAACP,QAAQ,CAACgC,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAA9B;AACH;;AAED1B,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAACV;AADA,OAAD,CAAR;AAMH;AAER,GAnCqB;AAAA,CAAf","sourcesContent":["import axios from \"axios\";\n// import setAuthToken from \"../utils/setAuthToken\";\nimport {setAlert} from \"./alert\";\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//LOAD USER\n\n\nexport const loadUser=()=>async dispatch=>{\n\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res=await axios.get(\"/api/auth\");\n\n        dispatch({\n            type: USER_LOADED,\n            payload:res.data\n   \n        })\n        \n    } catch (err) {\n        dis\n    }\n}\n\n\n// REGISTER USER\n\nexport const register=({name,email,password})=>async dispatch=>{\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n\n            }\n        }\n\n\nconst body=JSON.stringify({name,email,password});\n        try {\n            const res=await axios.post(\"http://localhost:5000/api/users\",body,config);\n            console.log(res)\n\n            dispatch({\n                type:REGISTER_SUCCESS,\n                payload:res.data\n            })\n\n\n\n        } catch (err) {\n            const errors=err.response.data.errors;\n            if(errors){\n                errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n            }\n\n            dispatch({\n                type:REGISTER_FAIL,\n\n            })\n\n            \n        }\n\n}"]},"metadata":{},"sourceType":"module"}