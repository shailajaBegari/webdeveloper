{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/componets/auth/Register.js\",\n    _s = $RefreshSig$();\n\n// import React,{Fragment,useState} from 'react'\n// import {connect}  from   \"react-redux\";\n// // import axios from \"axios\"\n// import{Link,Redirect}  from \"react-router-dom\"\n// import {setAlert} from \"../../actions/alert\";\n// import {register} from \"../../actions/auth\";\n// import PropTypes from \"prop-types\"\n// // import {useNavigate} from \"react-router-dom\";\n// const Register = ({setAlert,register,isAuthenticated}) => {\n//   // const navigate = useNavigate();\n//     const[formData,setFormData]=useState({\n//         name:\"\",\n//         email:\"\",\n//         password:\"\",\n//         password2:\"\"\n//         });\n//         const {name,email,password,password2}=formData;\n//         const onChange=e=>setFormData({\n//             ...formData,[e.target.name]:e.target.value\n//         })\n//         const onSubmit=async e=>{\n//             e.preventDefault();\n//             if(password!==password2){\n//                 setAlert(\"passwords do not match\",\"danger\");\n//             }else{\n//                 // console.log(formData)\n//                 // console.log(\"SUCCESS\")\n//                 register({name,email,password});\n//                 // const newUser={\n//                 //     name,\n//                 //     email,\n//                 //     password\n//                 // }  \n//                 // try{\n//                 //     const config={\n//                 //         headers:{\n//                 //             \"Content-Type\":\"application/json\"\n//                 //         }\n//                 //     }\n//                 //     const body=JSON.stringify(newUser);\n//                 //     const res=await axios.post(\"http://localhost:5000/api/users\",body,config)\n//                 //     console.log(res.data);\n//                 // }catch(err){\n//                 //     console.error(err.response.data);\n//                 // }  \n//             }\n//         }\n//         if(isAuthenticated){\n//         //  return navigate(\"/dashboard\" )\n//           return <Redirect to=\"/dashboard\" />\n//         }\n//   return (\n//    <Fragment>\n//    <h1 className=\"large text-primary\">Sign Up</h1>\n//    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n//    <form className=\"form\"  onSubmit={e=>onSubmit(e)} >\n//      <div className=\"form-group\">\n//        <input type=\"text\" placeholder=\"Name\" \n//        name=\"name\" value={name} \n//         onChange={e=>onChange(e)}   required />\n//      </div>\n//      <div className=\"form-group\">\n//        <input type=\"email\" placeholder=\"Email Address\" \n//        name=\"email\"  value={email} \n//        onChange={e=>onChange(e)} required />\n//        <small className=\"form-text\"\n//          >This site uses Gravatar so if you want a profile image, use a\n//          Gravatar email</small>\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Password\"\n//          name=\"password\"\n//          minLength=\"6\"\n//          value={password}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Confirm Password\"\n//          name=\"password2\"\n//          minLength=\"6\"\n//          value={password2}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n//    </form>\n//    <p className=\"my-1\">\n//      Already have an account? <Link to=\"/login\">Sign In</Link>\n//    </p>\n//    </Fragment>\n//   )\n// }\n// Register.propTypes={\n//   // setAlert:PropTypes.func.isRequired\n//   setAlert:PropTypes.func.isRequired,\n//   register:PropTypes.func.isRequired,\n//   isAuthenticated:PropTypes.bool,\n// };\n// const mapStateToProps=(state)=>({\n//   isAuthenticated:state.auth.isAuthenticated,\n//   // auth:state.auth\n// })\n// export default connect(\n//   mapStateToProps,\n//   {setAlert,register}\n//   )(Register);\n// /////////////////////////////////\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          value: password2,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"eVRwiIHrA70fH5BS2Qg+xl2Vu80=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/auth/Register.js"],"names":["React","useState","connect","Link","Navigate","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEH,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBG,IAAAA;AAAtB,GAA4C;AAC5D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAD,CAAxC;AAOA,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAuCL,QAA7C;;AAEA,QAAMM,QAAQ,GAAIC,CAAD,IACfN,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAG,MAAOH,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BV,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAD,CAAR;AACD;AACF,GAPD;;AASA,MAAIL,eAAJ,EAAqB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEW,QAAjC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAER,IAJT;AAKE,UAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAEH,KAJT;AAKE,UAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAuBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAEF,QAJT;AAKE,UAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvBF,eAgCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,KAAK,EAAED,SAJT;AAKE,UAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF,eAyCE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAgDE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,2DAC2B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAhFD;;GAAMR,Q;;KAAAA,Q;AAkFNA,QAAQ,CAACc,SAAT,GAAqB;AACnBjB,EAAAA,QAAQ,EAAEE,SAAS,CAACgB,IAAV,CAAeC,UADN;AAEnBlB,EAAAA,QAAQ,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UAFN;AAGnBf,EAAAA,eAAe,EAAEF,SAAS,CAACkB;AAHR,CAArB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,eAAe,EAAEkB,KAAK,CAACC,IAAN,CAAWnB;AADM,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACwB,eAAD,EAAkB;AAAErB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAiDE,QAAjD,CAAf","sourcesContent":["// import React,{Fragment,useState} from 'react'\n// import {connect}  from   \"react-redux\";\n\n// // import axios from \"axios\"\n// import{Link,Redirect}  from \"react-router-dom\"\n// import {setAlert} from \"../../actions/alert\";\n// import {register} from \"../../actions/auth\";\n\n// import PropTypes from \"prop-types\"\n// // import {useNavigate} from \"react-router-dom\";\n\n// const Register = ({setAlert,register,isAuthenticated}) => {\n//   // const navigate = useNavigate();\n\n//     const[formData,setFormData]=useState({\n//         name:\"\",\n//         email:\"\",\n//         password:\"\",\n//         password2:\"\"\n//         });\n\n//         const {name,email,password,password2}=formData;\n\n//         const onChange=e=>setFormData({\n//             ...formData,[e.target.name]:e.target.value\n//         })\n\n//         const onSubmit=async e=>{\n//             e.preventDefault();\n//             if(password!==password2){\n//                 setAlert(\"passwords do not match\",\"danger\");\n//             }else{\n//                 // console.log(formData)\n//                 // console.log(\"SUCCESS\")\n//                 register({name,email,password});\n//                 // const newUser={\n//                 //     name,\n//                 //     email,\n//                 //     password\n//                 // }  \n//                 // try{\n//                 //     const config={\n//                 //         headers:{\n//                 //             \"Content-Type\":\"application/json\"\n//                 //         }\n//                 //     }\n                    \n//                 //     const body=JSON.stringify(newUser);\n//                 //     const res=await axios.post(\"http://localhost:5000/api/users\",body,config)\n//                 //     console.log(res.data);\n//                 // }catch(err){\n//                 //     console.error(err.response.data);\n//                 // }  \n//             }\n//         }\n        \n\n//         if(isAuthenticated){\n//         //  return navigate(\"/dashboard\" )\n//           return <Redirect to=\"/dashboard\" />\n\n//         }\n\n//   return (\n//    <Fragment>\n//    <h1 className=\"large text-primary\">Sign Up</h1>\n//    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n//    <form className=\"form\"  onSubmit={e=>onSubmit(e)} >\n//      <div className=\"form-group\">\n//        <input type=\"text\" placeholder=\"Name\" \n//        name=\"name\" value={name} \n//         onChange={e=>onChange(e)}   required />\n//      </div>\n//      <div className=\"form-group\">\n//        <input type=\"email\" placeholder=\"Email Address\" \n//        name=\"email\"  value={email} \n//        onChange={e=>onChange(e)} required />\n//        <small className=\"form-text\"\n//          >This site uses Gravatar so if you want a profile image, use a\n//          Gravatar email</small>\n       \n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Password\"\n//          name=\"password\"\n//          minLength=\"6\"\n//          value={password}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Confirm Password\"\n//          name=\"password2\"\n//          minLength=\"6\"\n//          value={password2}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n//    </form>\n//    <p className=\"my-1\">\n//      Already have an account? <Link to=\"/login\">Sign In</Link>\n//    </p>\n//    </Fragment>\n//   )\n// }\n\n// Register.propTypes={\n//   // setAlert:PropTypes.func.isRequired\n\n//   setAlert:PropTypes.func.isRequired,\n//   register:PropTypes.func.isRequired,\n//   isAuthenticated:PropTypes.bool,\n\n// };\n\n\n// const mapStateToProps=(state)=>({\n  \n//   isAuthenticated:state.auth.isAuthenticated,\n//   // auth:state.auth\n\n// })\n\n\n// export default connect(\n//   mapStateToProps,\n//   {setAlert,register}\n//   )(Register);\n\n\n\n// /////////////////////////////////\n\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Navigate to=\"/dashboard\" />;\n  }\n\n  return (\n    <section className=\"container\">\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </section>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);"]},"metadata":{},"sourceType":"module"}