{"ast":null,"code":"import axios from \"axios\"; // import setAuthToken from \"../utils/setAuthToken\";\n\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"http://localhost:5000/api/auth\"); // console.log(res)\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (er) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // REGISTER USER\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/users\", body, config);\n      console.log(res);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n}; //LOGINUSER\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/auth\", body, config);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //LOGOUT/CLEAR PROFILE\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/socialmedia/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","er","register","name","email","password","config","headers","body","JSON","stringify","post","console","log","err","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import setAuthToken from \"../utils/setAuthToken\";\nimport {\n    setAlert\n} from \"./alert\";\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_PROFILE,\n\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//LOAD USER\n\n\nexport const loadUser = () => async dispatch => {\n\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get(\"http://localhost:5000/api/auth\");\n        // console.log(res)\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n\n        })\n\n    } catch (er) {\n        dispatch({\n            type: AUTH_ERROR,\n\n        })\n    }\n}\n\n\n// REGISTER USER\n\nexport const register = ({\n    name,\n    email,\n    password\n}) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n\n        }\n    }\n\n\n    const body = JSON.stringify({\n        name,\n        email,\n        password\n    });\n    try {\n        const res = await axios.post(\"http://localhost:5000/api/users\", body, config);\n        console.log(res)\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\n        }\n\n        dispatch({\n            type: REGISTER_FAIL,\n\n        })\n\n\n    }\n\n}\n\n\n//LOGINUSER\n\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n\n        }\n    }\n\n\n\n    const body = JSON.stringify({\n        email,\n        password\n    })\n    try {\n        const res = await axios.post(\"http://localhost:5000/api/auth\", body, config);\n        console.log(res)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n\n\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\n        }\n\n        dispatch({\n            type: LOGIN_FAIL,\n\n        })\n\n\n    }\n\n};\n\n\n//LOGOUT/CLEAR PROFILE\n\nexport const logout = () => dispatch => {\n\n    dispatch({\n        type: CLEAR_PROFILE\n    });\n    dispatch({\n        type: LOGOUT\n    });\n}"]},"metadata":{},"sourceType":"module"}