{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/componets/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport auth from '../../reducers/auth'; // import auth from '../../reducers/auth'\n// import { Router } from 'react-router'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !auth.isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 62\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 88\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}; // component:Component,\n// auth:{isAuthenticated,loading},\n// ...rest\n//     }) =>(\n//         <Route \n//         {...rest}\n//         render={props=>\n//         !isAuthenticated && !loading ? (\n//             <Redirect to=\"/login\" />\n//         ):(<Component {...props} />)\n//     }\n//     />            \n//  );\n\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","auth","PrivateRoute","component","Component","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;AACA;;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAACC,IAAAA,SAAS,EAACC,SAAX;AAAqBH,IAAAA,IAAI,EAAC;AAACI,MAAAA,eAAD;AAAiBC,MAAAA;AAAjB,KAA1B;AAAoD,OAAGC;AAAvD,GAAD;AAAA,sBAEb,QAAC,KAAD,OAAYA,IAAZ;AACA,IAAA,MAAM,EAAEC,KAAK,IAAG,CAACP,IAAI,CAACI,eAAN,IAAyB,CAACC,OAA1B,gBAAqC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAArC,gBAA+D,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAD/E;AAAA;AAAA;AAAA;AAAA,UAFa;AAAA,CAArB,C,CAQI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApBEN,Y;AAyBNA,YAAY,CAACO,SAAb,GAAuB;AACnBR,EAAAA,IAAI,EAACF,SAAS,CAACW,MAAV,CAAiBC;AADH,CAAvB;;AAKA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC1BZ,EAAAA,IAAI,EAACY,KAAK,CAACZ;AADe,CAAH,CAA3B;;AAIA,eAAeD,OAAO,CAACY,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route,Redirect} from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport auth from '../../reducers/auth'\n// import auth from '../../reducers/auth'\n// import { Router } from 'react-router'\n\nconst PrivateRoute = ({component:Component,auth:{isAuthenticated,loading},...rest})=>(\n\n        <Route  {...rest} \n        render={props=> !auth.isAuthenticated && !loading ? (<Redirect to=\"/login\"/>):(<Component {...props}/>) }                \n\n        />\n\n)\n    // component:Component,\n    // auth:{isAuthenticated,loading},\n    // ...rest\n    //     }) =>(\n    //         <Route \n    //         {...rest}\n    //         render={props=>\n    //         !isAuthenticated && !loading ? (\n    //             <Redirect to=\"/login\" />\n    //         ):(<Component {...props} />)\n    //     }\n    //     />            \n    //  );\n\n\n\n\nPrivateRoute.propTypes={\n    auth:PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps=state=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}