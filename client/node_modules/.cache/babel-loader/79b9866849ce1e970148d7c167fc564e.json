{"ast":null,"code":"import axios from \"axios\"; // import setAuthToken from \"../utils/setAuthToken\";\n\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"http://localhost:5000/api/auth\");\n    console.log(res);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (er) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // REGISTER USER\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/users\", body, config);\n      console.log(res);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n}; //LOGINUSER\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/auth\", body, config);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //LOGOUT/CLEAR PROFILE\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","console","log","type","payload","data","er","register","name","email","password","config","headers","body","JSON","stringify","post","err","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import setAuthToken from \"../utils/setAuthToken\";\nimport {setAlert} from \"./alert\";\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//LOAD USER\n\n\nexport const loadUser=()=>async dispatch=>{\n\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res=await axios.get(\"http://localhost:5000/api/auth\");\n        console.log(res)\n\n        dispatch({\n            type: USER_LOADED,\n            payload:res.data\n   \n        })\n        \n    } catch (er) {\n        dispatch({\n            type: AUTH_ERROR,\n\n        })\n    }\n}\n\n\n// REGISTER USER\n\nexport const register=({name,email,password})=>async dispatch=>{\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n\n            }\n        }\n\n\nconst body=JSON.stringify({name,email,password});\n        try {\n            const res=await axios.post(\"http://localhost:5000/api/users\",body,config);\n            console.log(res)\n\n            dispatch({\n                type:REGISTER_SUCCESS,\n                payload:res.data\n            })\n\n            dispatch(loadUser())\n\n        } catch (err) {\n            const errors=err.response.data.errors;\n            if(errors){\n                errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n            }\n\n            dispatch({\n                type:REGISTER_FAIL,\n\n            })\n\n            \n        }\n\n}\n\n\n//LOGINUSER\n\n\nexport const login=(email,password)=>async dispatch=>{\n    const config={\n        headers:{\n            \"Content-Type\":\"application/json\"\n\n        }\n    }\n\n\nconst body=JSON.stringify({email,password})\n    try {\n        const res=await axios.post(\"http://localhost:5000/api/auth\",body,config);\n        console.log(res)\n\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:res.data\n        })\n\n        dispatch(loadUser())\n\n\n\n    } catch (err) {\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n\n        dispatch({\n            type:LOGIN_FAIL,\n\n        })\n\n        \n    }\n\n};\n\n\n//LOGOUT/CLEAR PROFILE\n\nexport const logout=()=>dispatch=>{\n    dispatch({type:LOGOUT});\n}\n\n"]},"metadata":{},"sourceType":"module"}