{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/componets/auth/Register.js\",\n    _s = $RefreshSig$();\n\n// import React,{Fragment,useState} from 'react'\n// import {connect}  from   \"react-redux\";\n// // import axios from \"axios\"\n// import{Link,Redirect}  from \"react-router-dom\"\n// import {setAlert} from \"../../actions/alert\";\n// import {register} from \"../../actions/auth\";\n// import PropTypes from \"prop-types\"\n// // import {useNavigate} from \"react-router-dom\";\n// const Register = ({setAlert,register,isAuthenticated}) => {\n//   // const navigate = useNavigate();\n//     const[formData,setFormData]=useState({\n//         name:\"\",\n//         email:\"\",\n//         password:\"\",\n//         password2:\"\"\n//         });\n//         const {name,email,password,password2}=formData;\n//         const onChange=e=>setFormData({\n//             ...formData,[e.target.name]:e.target.value\n//         })\n//         const onSubmit=async e=>{\n//             e.preventDefault();\n//             if(password!==password2){\n//                 setAlert(\"passwords do not match\",\"danger\");\n//             }else{\n//                 // console.log(formData)\n//                 // console.log(\"SUCCESS\")\n//                 register({name,email,password});\n//                 // const newUser={\n//                 //     name,\n//                 //     email,\n//                 //     password\n//                 // }  \n//                 // try{\n//                 //     const config={\n//                 //         headers:{\n//                 //             \"Content-Type\":\"application/json\"\n//                 //         }\n//                 //     }\n//                 //     const body=JSON.stringify(newUser);\n//                 //     const res=await axios.post(\"http://localhost:5000/api/users\",body,config)\n//                 //     console.log(res.data);\n//                 // }catch(err){\n//                 //     console.error(err.response.data);\n//                 // }  \n//             }\n//         }\n//         if(isAuthenticated){\n//         //  return navigate(\"/dashboard\" )\n//         // setAlert(\"REGISTER SUCCESFULLY COMPLTED\",\"success\")\n//           return <Redirect to=\"/dashboard\" />\n//         }\n//   return (\n//    <Fragment>\n//    <h1 className=\"large text-primary\">Sign Up</h1>\n//    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n//    <form className=\"form\"  onSubmit={e=>onSubmit(e)} >\n//      <div className=\"form-group\">\n//        <input type=\"text\" placeholder=\"Name\" \n//        name=\"name\" value={name} \n//         onChange={e=>onChange(e)}   required />\n//      </div>\n//      <div className=\"form-group\">\n//        <input type=\"email\" placeholder=\"Email Address\" \n//        name=\"email\"  value={email} \n//        onChange={e=>onChange(e)} required />\n//        <small className=\"form-text\"\n//          >This site uses Gravatar so if you want a profile image, use a\n//          Gravatar email</small>\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Password\"\n//          name=\"password\"\n//          minLength=\"6\"\n//          value={password}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Confirm Password\"\n//          name=\"password2\"\n//          minLength=\"6\"\n//          value={password2}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n//    </form>\n//    <p className=\"my-1\">\n//      Already have an account? <Link to=\"/login\">Sign In</Link>\n//    </p>\n//    </Fragment>\n//   )\n// }\n// Register.propTypes={\n//   // setAlert:PropTypes.func.isRequired\n//   setAlert:PropTypes.func.isRequired,\n//   register:PropTypes.func.isRequired,\n//   isAuthenticated:PropTypes.bool,\n// };\n// const mapStateToProps=(state)=>({\n//   isAuthenticated:state.auth.isAuthenticated,\n//   // auth:state.auth\n// })\n// export default connect(\n//   mapStateToProps,\n//   {setAlert,register}\n//   )(Register);\n// This code for the Register user ie. sign up\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onchange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('password do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  }; // redirect if log in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 31\n      }, this), \"Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses Gravtar so if you want a profile image, use a Gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => onchange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an Account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Register, \"g7sPlQfllSIC4zEgUJgn+89aRr8=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onchange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["// import React,{Fragment,useState} from 'react'\n// import {connect}  from   \"react-redux\";\n\n// // import axios from \"axios\"\n// import{Link,Redirect}  from \"react-router-dom\"\n// import {setAlert} from \"../../actions/alert\";\n// import {register} from \"../../actions/auth\";\n\n// import PropTypes from \"prop-types\"\n// // import {useNavigate} from \"react-router-dom\";\n\n// const Register = ({setAlert,register,isAuthenticated}) => {\n//   // const navigate = useNavigate();\n\n//     const[formData,setFormData]=useState({\n//         name:\"\",\n//         email:\"\",\n//         password:\"\",\n//         password2:\"\"\n//         });\n\n//         const {name,email,password,password2}=formData;\n\n//         const onChange=e=>setFormData({\n//             ...formData,[e.target.name]:e.target.value\n//         })\n\n//         const onSubmit=async e=>{\n//             e.preventDefault();\n//             if(password!==password2){\n//                 setAlert(\"passwords do not match\",\"danger\");\n//             }else{\n//                 // console.log(formData)\n//                 // console.log(\"SUCCESS\")\n//                 register({name,email,password});\n//                 // const newUser={\n//                 //     name,\n//                 //     email,\n//                 //     password\n//                 // }  \n//                 // try{\n//                 //     const config={\n//                 //         headers:{\n//                 //             \"Content-Type\":\"application/json\"\n//                 //         }\n//                 //     }\n                    \n//                 //     const body=JSON.stringify(newUser);\n//                 //     const res=await axios.post(\"http://localhost:5000/api/users\",body,config)\n//                 //     console.log(res.data);\n//                 // }catch(err){\n//                 //     console.error(err.response.data);\n//                 // }  \n//             }\n//         }\n        \n\n//         if(isAuthenticated){\n//         //  return navigate(\"/dashboard\" )\n//         // setAlert(\"REGISTER SUCCESFULLY COMPLTED\",\"success\")\n//           return <Redirect to=\"/dashboard\" />\n\n//         }\n\n//   return (\n//    <Fragment>\n//    <h1 className=\"large text-primary\">Sign Up</h1>\n//    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n//    <form className=\"form\"  onSubmit={e=>onSubmit(e)} >\n//      <div className=\"form-group\">\n//        <input type=\"text\" placeholder=\"Name\" \n//        name=\"name\" value={name} \n//         onChange={e=>onChange(e)}   required />\n//      </div>\n//      <div className=\"form-group\">\n//        <input type=\"email\" placeholder=\"Email Address\" \n//        name=\"email\"  value={email} \n//        onChange={e=>onChange(e)} required />\n//        <small className=\"form-text\"\n//          >This site uses Gravatar so if you want a profile image, use a\n//          Gravatar email</small>\n       \n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Password\"\n//          name=\"password\"\n//          minLength=\"6\"\n//          value={password}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <div className=\"form-group\">\n//        <input\n//          type=\"password\"\n//          placeholder=\"Confirm Password\"\n//          name=\"password2\"\n//          minLength=\"6\"\n//          value={password2}\n//          onChange={e=>onChange(e)}\n//          required\n//        />\n//      </div>\n//      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n//    </form>\n//    <p className=\"my-1\">\n//      Already have an account? <Link to=\"/login\">Sign In</Link>\n//    </p>\n//    </Fragment>\n//   )\n// }\n\n// Register.propTypes={\n//   // setAlert:PropTypes.func.isRequired\n\n//   setAlert:PropTypes.func.isRequired,\n//   register:PropTypes.func.isRequired,\n//   isAuthenticated:PropTypes.bool,\n\n// };\n\n\n// const mapStateToProps=(state)=>({\n  \n//   isAuthenticated:state.auth.isAuthenticated,\n//   // auth:state.auth\n\n// })\n\n\n// export default connect(\n//   mapStateToProps,\n//   {setAlert,register}\n//   )(Register);\n\n\n\n// This code for the Register user ie. sign up\n\nimport React,{Fragment,useState}from 'react';\nimport { connect } from 'react-redux';\nimport {Link,Redirect} from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport{register} from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n\nconst Register = ({setAlert,register,isAuthenticated}) => {\n    const [formData,setFormData]=useState({\n        name:'',\n        email:'',\n        password:'',\n        password2:''\n    });\n\n    const {name,email,password,password2}= formData;  \n    const onchange = e => setFormData({...formData,[e.target.name]:e.target.value});\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2){\n            setAlert('password do not match','danger');\n        }else{\n            register({ name, email,password});\n        }\n    };\n\n    // redirect if log in\n    if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n    \n\n  return (\n      <Fragment>\n          <h1 className='large text-primary'>Sign Up</h1>\n          <p className='lead'><i className='fas fa-user'></i>Create Your Account</p>\n          <form className='form' onSubmit={e=>onSubmit(e)}>\n              <div className='form-group'>\n                  <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} \n                  onChange={e => onchange(e)}\n                  />\n              </div>\n              <div className='form-group'>\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} \n                  onChange={e => onchange(e)}\n                  />\n                    <small className='form-text'>\n                        This site uses Gravtar so if you want a profile image, use a Gravatar email\n                    </small>\n              </div>\n              <div className='form-group'>\n                <input type=\"password\"\n                placeholder='Password'\n                name='password'\n                value={password} \n                  onChange={e => onchange(e)}\n                 \n               />\n              </div>\n              <div className='form-group'>\n                  <input\n                  type='password'\n                  placeholder='Confirm Password'\n                  name='password2'\n                  value={password2} \n                  onChange={e => onchange(e)}               \n                  />\n\n              </div>\n              <input type= \"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n            <p className='my-1'>\n                Already have an Account?<Link to='/login'>Sign In</Link>\n            </p>\n      </Fragment>    \n  )\n};\n\nRegister.propTypes={\n    setAlert:PropTypes.func.isRequired,\n    register:PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    { setAlert,register}\n    ) (Register);"]},"metadata":{},"sourceType":"module"}