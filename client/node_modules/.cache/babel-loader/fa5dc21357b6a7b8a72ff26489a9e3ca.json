{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/componets/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    getCurrentProfile,\n    auth: {\n      user\n    },\n    profile: {\n      profile,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }, this), \" Welcome  \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile,please add some info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getCurrentProfile","Link","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAqB,mBAArB;AAEA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAMA,MAAMC,SAAS,GAAG,QAEmB;AAAA;;AAAA,MAFlB;AAACF,IAAAA,iBAAD;AACbG,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD,KADQ;AAEbC,IAAAA,OAAO,EAAC;AAACA,MAAAA,OAAD;AAASC,MAAAA;AAAT;AAFK,GAEkB;AACzBX,EAAAA,SAAS,CAAC,MAAI;AACdK,IAAAA,iBAAiB;AACpB,GAFY,EAEX,EAFW,CAAT;AAIV,SAAOM,OAAO,IAAID,OAAO,KAAI,IAAtB,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,gBAGL,QAAC,QAAD;AAAA,4BACF;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACA;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,gBACwCD,IAAI,IAAIA,IAAI,CAACG,IADrD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,EAKEF,OAAO,KAAI,IAAX,gBACE,QAAC,QAAD;AAAA,6BACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,gBAIE,QAAC,QAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAwBD,CA/BD;;GAAMH,S;;KAAAA,S;AAiCNA,SAAS,CAACM,SAAV,GAAoB;AAChBR,EAAAA,iBAAiB,EAACH,SAAS,CAACY,IAAV,CAAeC,UADjB;AAEhBP,EAAAA,IAAI,EAACN,SAAS,CAACc,MAAV,CAAiBD,UAFN;AAGhBL,EAAAA,OAAO,EAACR,SAAS,CAACc,MAAV,CAAiBD;AAHT,CAApB;;AAMA,MAAME,eAAe,GAACC,KAAK,KAAG;AAC1BV,EAAAA,IAAI,EAACU,KAAK,CAACV,IADe;AAE1BE,EAAAA,OAAO,EAACQ,KAAK,CAACR;AAFY,CAAH,CAA3B;;AAQA,eAAeP,OAAO,CAACc,eAAD,EAAiB;AAACZ,EAAAA;AAAD,CAAjB,CAAP,CAA6CE,SAA7C,CAAf","sourcesContent":["import React,{useEffect,Fragment} from 'react'\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport Spinner from  \"../layout/Spinner\"\n\nimport {getCurrentProfile} from \"../../actions/profile\"\nimport { Link } from 'react-router-dom';\n\n\n\n\n\nconst Dashboard = ({getCurrentProfile,\n      auth:{user},\n      profile:{profile,loading}}) => {\n            useEffect(()=>{\n            getCurrentProfile();\n        },[]);\n\n  return loading && profile ===null ? (\n      <Spinner />\n    ):(\n    <Fragment>\n  <h1 className=\"large text-primary\">Dashboard</h1>\n  <p className=\"lead\">\n  <i className=\"fas fa-user\" /> Welcome  {user && user.name}\n  </p>\n     {profile !==null ? (\n        <Fragment>\n        <DashboardActions />\n        </Fragment> ):(\n        <Fragment>\n        <p>You have not yet setup a profile,please add some info</p>\n        \n        <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n        </Link>\n        </Fragment> \n        )}\n        \n    </Fragment>\n  )\n\n};\n\nDashboard.propTypes={\n    getCurrentProfile:PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired,\n    profile:PropTypes.object.isRequired,\n};\n\nconst mapStateToProps=state=>({\n    auth:state.auth,\n    profile:state.profile\n\n\n})\n\n\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard)\n"]},"metadata":{},"sourceType":"module"}