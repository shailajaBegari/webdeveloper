{"ast":null,"code":"// // import React,{useEffect,Fragment} from 'react'\n// // import PropTypes from \"prop-types\";\n// // import {connect} from \"react-redux\";\n// // import Spinner from  \"../layout/Spinner\"\n// // import DashboardActions from   \"./DashboardActions\" ;\n// // import { Link } from 'react-router-dom';\n// // import  Experience  from './Experience';\n// // import Education from \"./Education\";\n// // import { getCurrentProfile,deleteAccount} from \"../../actions/profile\"\n// // const Dashboard = ({ \n// //   getCurrentProfile,\n// //   deleteAccount,\n// //   auth:{user},\n// //   profile:{profile,loading} }) => {\n// //   useEffect(()=>{\n// //       getCurrentProfile();\n// //   }, []);\n// // // const Dashboard = ({\n// // //     getCurrentProfile,\n// // //     deleteAccount,\n// // //       auth:{user},\n// // //       profile:{profile,loading}}) => {\n// // //             useEffect(()=>{\n// // //             getCurrentProfile();\n// // //         },[]);\n// //   return loading && profile ===null ? (\n// //       <Spinner />\n// //     ):(\n// //     <Fragment>\n// //   <h1 className=\"large text-primary\">Dashboard</h1>\n// //   <p className=\"lead\">\n// //   <i className=\"fas fa-user\" /> Welcome  {user && user.name}\n// //   </p>\n// //      {profile !==null ? (\n// //         <Fragment>\n// //          <DashboardActions/> \n// //          <Experience experience={profile.experience}/>\n// //          <Education education={profile.education}/>\n// //         <div className=\"my-2\">\n// //           <button onClick={()=>deleteAccount()} className=\"btn btn-danger\"  >\n// //           <i className=\"fas fa-user-minus\"></i>Delete My Account\n// //           </button> \n// //      </div>\n// //         </Fragment> ):(\n// //         <Fragment>\n// //         <p>You have not yet setup a profile,please add some info</p>\n// //         <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n// //             Create Profile\n// //         </Link>\n// //         </Fragment> \n// //         )}\n// //     </Fragment>\n// //   )\n// // };\n// // Dashboard.propTypes={\n// //     getCurrentProfile:PropTypes.func.isRequired,\n// //     deleteAccount:PropTypes.func.isRequired,\n// //     auth:PropTypes.object.isRequired,\n// //     profile:PropTypes.object.isRequired,\n// // };\n// // const mapStateToProps=state=>({\n// //     auth:state.auth,\n// //     profile:state.profile\n// // })\n// // export default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard)\n// import React,{ Fragment, useEffect} from 'react';\n// import {Link} from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import {connect} from 'react-redux';\n// import Spinner from '../layout/Spinner';\n// import DashboardActions from './DashboardActions';\n// import Experience from './Experience';\n// import Education from './Education';\n// import { getCurrentProfile,deleteAccount } from '../../actions/profile';\n// const Dashboard = ({ \n//     getCurrentProfile,\n//     deleteAccount,\n//     auth:{user},\n//     profile:{profile,loading} })=> {\n//       useEffect(() => {\n//         getCurrentProfile();\n//     }, [getCurrentProfile]);\n//     // useEffect(()=>{\n//     //     getCurrentProfile();\n//     // }, []);\n//   return loading && profile === null ?\n//     (<Spinner/>):(\n//     <Fragment>\n//       <h1 className=\"large text-primary\">Dashboard</h1>\n//       <p className='lead'><i className='fas fa-user'>Welcome {user && user.name}\n//       </i></p>\n//       {profile !== null ? (<Fragment>\n//           <DashboardActions/>\n//           <Experience experience={profile.experience}/>\n//           <Education education={profile.education}/>\n//             <div className='my-2'>\n//                 <button className='btn btn-danger' onClick={()=>deleteAccount()}>\n//                     <i className='fas fa-user-minus'></i>\n//                     Delete my Account\n//                 </button>\n//             </div>\n//       </Fragment>) : \n//       (<Fragment>\n//           <p>You have not yet setup a profile, please add some info</p>\n//           <Link to='/create-profile' className=\"btn btn-primary my-1\">\n//               Create Profile\n//           </Link>\n//       </Fragment>)}\n//   </Fragment>\n//   );   \n// };\n// Dashboard.propTypes = {\n//     getCurrentProfile :PropTypes.func.isRequired,\n//     deleteAccount:PropTypes.func.isRequired,\n//     auth:PropTypes.object.isRequired,\n//     profile: PropTypes.object.isRequired\n// };\n// const mapStateToProps=state => ({\n//     auth :state.auth,\n//     profile :state.profile\n// })\n// export default connect(\n//     mapStateToProps,\n//     {getCurrentProfile,deleteAccount})\n//     (Dashboard);","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/dashboard/Dashboard.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["// // import React,{useEffect,Fragment} from 'react'\n// // import PropTypes from \"prop-types\";\n// // import {connect} from \"react-redux\";\n// // import Spinner from  \"../layout/Spinner\"\n// // import DashboardActions from   \"./DashboardActions\" ;\n// // import { Link } from 'react-router-dom';\n// // import  Experience  from './Experience';\n// // import Education from \"./Education\";\n// // import { getCurrentProfile,deleteAccount} from \"../../actions/profile\"\n\n\n\n// // const Dashboard = ({ \n// //   getCurrentProfile,\n// //   deleteAccount,\n// //   auth:{user},\n// //   profile:{profile,loading} }) => {\n// //   useEffect(()=>{\n// //       getCurrentProfile();\n// //   }, []);\n\n// // // const Dashboard = ({\n// // //     getCurrentProfile,\n// // //     deleteAccount,\n// // //       auth:{user},\n// // //       profile:{profile,loading}}) => {\n// // //             useEffect(()=>{\n// // //             getCurrentProfile();\n// // //         },[]);\n\n// //   return loading && profile ===null ? (\n// //       <Spinner />\n// //     ):(\n// //     <Fragment>\n// //   <h1 className=\"large text-primary\">Dashboard</h1>\n// //   <p className=\"lead\">\n// //   <i className=\"fas fa-user\" /> Welcome  {user && user.name}\n// //   </p>\n// //      {profile !==null ? (\n// //         <Fragment>\n// //          <DashboardActions/> \n// //          <Experience experience={profile.experience}/>\n// //          <Education education={profile.education}/>\n// //         <div className=\"my-2\">\n// //           <button onClick={()=>deleteAccount()} className=\"btn btn-danger\"  >\n// //           <i className=\"fas fa-user-minus\"></i>Delete My Account\n// //           </button> \n// //      </div>\n\n\n// //         </Fragment> ):(\n// //         <Fragment>\n// //         <p>You have not yet setup a profile,please add some info</p>\n        \n// //         <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n// //             Create Profile\n// //         </Link>\n// //         </Fragment> \n// //         )}\n        \n// //     </Fragment>\n// //   )\n\n// // };\n\n// // Dashboard.propTypes={\n// //     getCurrentProfile:PropTypes.func.isRequired,\n// //     deleteAccount:PropTypes.func.isRequired,\n// //     auth:PropTypes.object.isRequired,\n// //     profile:PropTypes.object.isRequired,\n// // };\n\n// // const mapStateToProps=state=>({\n// //     auth:state.auth,\n// //     profile:state.profile\n\n\n// // })\n\n// // export default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard)\n\n\n\n\n\n\n\n// import React,{ Fragment, useEffect} from 'react';\n// import {Link} from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import {connect} from 'react-redux';\n// import Spinner from '../layout/Spinner';\n// import DashboardActions from './DashboardActions';\n// import Experience from './Experience';\n// import Education from './Education';\n// import { getCurrentProfile,deleteAccount } from '../../actions/profile';\n  \n\n\n\n\n// const Dashboard = ({ \n//     getCurrentProfile,\n//     deleteAccount,\n//     auth:{user},\n//     profile:{profile,loading} })=> {\n//       useEffect(() => {\n//         getCurrentProfile();\n//     }, [getCurrentProfile]);\n//     // useEffect(()=>{\n//     //     getCurrentProfile();\n//     // }, []);\n\n//   return loading && profile === null ?\n//     (<Spinner/>):(\n//     <Fragment>\n//       <h1 className=\"large text-primary\">Dashboard</h1>\n//       <p className='lead'><i className='fas fa-user'>Welcome {user && user.name}\n//       </i></p>\n//       {profile !== null ? (<Fragment>\n//           <DashboardActions/>\n//           <Experience experience={profile.experience}/>\n//           <Education education={profile.education}/>\n\n//             <div className='my-2'>\n//                 <button className='btn btn-danger' onClick={()=>deleteAccount()}>\n//                     <i className='fas fa-user-minus'></i>\n//                     Delete my Account\n//                 </button>\n\n//             </div>\n\n//       </Fragment>) : \n//       (<Fragment>\n//           <p>You have not yet setup a profile, please add some info</p>\n//           <Link to='/create-profile' className=\"btn btn-primary my-1\">\n//               Create Profile\n//           </Link>\n//       </Fragment>)}\n     \n//   </Fragment>\n//   );   \n  \n// };\n\n// Dashboard.propTypes = {\n//     getCurrentProfile :PropTypes.func.isRequired,\n//     deleteAccount:PropTypes.func.isRequired,\n//     auth:PropTypes.object.isRequired,\n//     profile: PropTypes.object.isRequired\n// };\n// const mapStateToProps=state => ({\n//     auth :state.auth,\n//     profile :state.profile\n\n// })\n\n// export default connect(\n//     mapStateToProps,\n//     {getCurrentProfile,deleteAccount})\n//     (Dashboard);"]},"metadata":{},"sourceType":"module"}