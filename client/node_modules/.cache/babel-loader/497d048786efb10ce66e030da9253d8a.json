{"ast":null,"code":"import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import auth from '../../reducers/auth'\n// import { Router } from 'react-router'\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n}; // component:Component,\n// auth:{isAuthenticated,loading},\n// ...rest\n//     }) =>(\n//         <Route \n//         {...rest}\n//         render={props=>\n//         !isAuthenticated && !loading ? (\n//             <Redirect to=\"/login\" />\n//         ):(<Component {...props} />)\n//     }\n//     />            \n//  );\n\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","rest","propTypes","auth","object","isRequired","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;AACA;;AAEA,MAAMC,YAAY,GAAG,QAAiC;AAAA,MAAhC;AAACC,IAAAA,SAAS,EAACC,SAAX;AAAqB,OAAGC;AAAxB,GAAgC;AAErD,CAFD,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAfEH,Y;AAoBNA,YAAY,CAACI,SAAb,GAAuB;AACnBC,EAAAA,IAAI,EAACP,SAAS,CAACQ,MAAV,CAAiBC;AADH,CAAvB;;AAKA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC1BJ,EAAAA,IAAI,EAACI,KAAK,CAACJ;AADe,CAAH,CAA3B;;AAIA,eAAeN,OAAO,CAACS,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route,Redirect} from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\n// import auth from '../../reducers/auth'\n// import { Router } from 'react-router'\n\nconst PrivateRoute = ({component:Component,...rest})=>{\n\n}\n    // component:Component,\n    // auth:{isAuthenticated,loading},\n    // ...rest\n    //     }) =>(\n    //         <Route \n    //         {...rest}\n    //         render={props=>\n    //         !isAuthenticated && !loading ? (\n    //             <Redirect to=\"/login\" />\n    //         ):(<Component {...props} />)\n    //     }\n    //     />            \n    //  );\n\n\n\n\nPrivateRoute.propTypes={\n    auth:PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps=state=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}