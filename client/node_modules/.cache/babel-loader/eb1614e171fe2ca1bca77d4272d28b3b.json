{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/componets/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  let {\n    getProfileById,\n    profile: {\n      profile,\n      loading\n    },\n    auth,\n    match\n  } = _ref;\n  // useEffect(()=>{\n  //     getProfileById(match.params.id)\n  // },[getProfileById])\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this) // <Fragment>\n  // {profile ===null || loading ? \n  //     ( <Spinner /> ):(\n  //         <Fragment>\n  //         <Link to=\"/profiles\" className=\"btn btn-light\" >\n  //              Back To Profile\n  //         </Link> \n  //            {auth.isAuthenticated && auth.loading ===false && auth.user._id===profile.user._id && (\n  //             <Link to=\"/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>\n  //         )}   \n  //         </Fragment>\n  //         )}\n  // </Fragment>\n  ;\n};\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/componets/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAQC,OAAR,MAAqB,mBAArB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;;AAIA,MAAMC,OAAO,GAAG,QAA2D;AAAA,MAA1D;AAACD,IAAAA,cAAD;AAAgBE,IAAAA,OAAO,EAAC;AAACA,MAAAA,OAAD;AAASC,MAAAA;AAAT,KAAxB;AAA0CC,IAAAA,IAA1C;AAA+CC,IAAAA;AAA/C,GAA0D;AACvE;AACA;AACA;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ,CAGI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBJ;AAkBH,CAvBD;;KAAMJ,O;AA4BNA,OAAO,CAACK,SAAR,GAAoB;AAChBN,EAAAA,cAAc,EAACH,SAAS,CAACU,IAAV,CAAeC,UADd;AAEhBN,EAAAA,OAAO,EAACL,SAAS,CAACY,MAAV,CAAiBD,UAFT;AAGhBJ,EAAAA,IAAI,EAACP,SAAS,CAACY,MAAV,CAAiBD;AAHN,CAApB;;AAQA,MAAME,eAAe,GAACC,KAAK,KAAG;AAC1BT,EAAAA,OAAO,EAACS,KAAK,CAACT,OADY;AAE1BE,EAAAA,IAAI,EAACO,KAAK,CAACP;AAFe,CAAH,CAA3B;;AAOA,eAAeN,OAAO,CAACY,eAAD,EAAiB;AAACV,EAAAA;AAAD,CAAjB,CAAP,CAA0CC,OAA1C,CAAf","sourcesContent":["import React,{Fragment,useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\";\nimport  Spinner from \"../layout/Spinner\"\nimport {getProfileById} from \"../../actions/profile\";\n\n\n\nconst Profile = ({getProfileById,profile:{profile,loading},auth,match}) => {\n    // useEffect(()=>{\n    //     getProfileById(match.params.id)\n    // },[getProfileById])\n\n    return (\n        <div>\n        </div>\n        // <Fragment>\n            \n        // {profile ===null || loading ? \n        //     ( <Spinner /> ):(\n        //         <Fragment>\n        //         <Link to=\"/profiles\" className=\"btn btn-light\" >\n        //              Back To Profile\n        //         </Link> \n        //            {auth.isAuthenticated && auth.loading ===false && auth.user._id===profile.user._id && (\n        //             <Link to=\"/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>\n        //         )}   \n        //         </Fragment>\n        //         )}\n        // </Fragment>\n    )\n}\n\n\n\n\nProfile.propTypes = {\n    getProfileById:PropTypes.func.isRequired,\n    profile:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n\n}\n\n\nconst mapStateToProps=state=>({\n    profile:state.profile,\n    auth:state.auth\n    \n})\n\n\nexport default connect(mapStateToProps,{getProfileById})(Profile)\n"]},"metadata":{},"sourceType":"module"}