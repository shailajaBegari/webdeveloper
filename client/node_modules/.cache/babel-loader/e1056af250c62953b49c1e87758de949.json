{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Fragment, useEffect } from \"react\"; // import {Routes , Route,Router} from 'react-router-dom'\n\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Navbar from \"./componets/layout/Navbar\";\nimport Landing from \"./componets/layout/Landing\";\nimport Register from \"./componets/auth/Register\";\nimport Login from \"./componets/auth/Login\";\nimport Alert from \"./componets/layout/Alert\"; //REDUX\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    store.dispatch(loadUser);\n  }, []); // [] means =>If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) \n  //as a second argument. This tells React that your effect doesn’t depend\n  // on any values from props or state, so it never needs to re-run.\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App; // const App = () =>\n// <Router>\n// <Fragment >\n//       <Navbar/>\n//       <Route exact path = '/' component={Landing}/>\n//     </Fragment>\n// </Router>\n//   // <Fragment>\n//   //   <Navbar />\n//   //   <Landing />\n//   // </Fragment>\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Redirect","Navbar","Landing","Register","Login","Alert","Provider","store","loadUser","setAuthToken","localStorage","token","App","dispatch"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAmCC,KAAnC,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CAEA;;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,IAAGC,YAAY,CAACC,KAAhB,EAAsB;AACpBF,EAAAA,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ;AACD;;AAID,SAASC,GAAT,GAAe;AAAA;;AACbhB,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,KAAK,CAACM,QAAN,CAAeL,QAAf;AACD,GAFQ,EAEP,EAFO,CAAT,CADa,CAKb;AACA;AACA;;AAEA,sBACM,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACA;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,8BAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJA,eAOA;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,gCACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,MAAD;AAAA,kCACA,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAC,WAAb;AAAyB,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADN;AAoBD;;GA7BQK,G;;KAAAA,G;AA+BT,eAAeA,GAAf,C,CAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["\nimport './App.css';\nimport React,{Fragment,useEffect} from \"react\";\n// import {Routes , Route,Router} from 'react-router-dom'\nimport { BrowserRouter as Router,  Route,Redirect } from 'react-router-dom';\nimport Navbar from \"./componets/layout/Navbar\"\nimport Landing from \"./componets/layout/Landing\"\nimport Register from \"./componets/auth/Register\"\nimport Login from \"./componets/auth/Login\";\nimport Alert from \"./componets/layout/Alert\";\n\n//REDUX\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nif(localStorage.token){\n  setAuthToken(localStorage.token);\n}\n\n\n\nfunction App() {\n  useEffect(()=>{\n    store.dispatch(loadUser)\n  },[])\n\n  // [] means =>If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) \n  //as a second argument. This tells React that your effect doesn’t depend\n  // on any values from props or state, so it never needs to re-run.\n\n  return (\n        <Provider store={store}>\n        <div  className=\"App\">\n        \n        <Navbar />\n        \n        <Router>\n          <Route path=\"/\" element={<Landing /> } />\n        </Router>\n        <section className=\"container\">\n        <Alert />\n        <Router>\n        <Route  path=\"/register\" element={<Register/>} />\n        <Route  path=\"/login\" element={<Login/>} />\n        </Router>\n        </section>\n        </div>\n        </Provider>\n\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n// const App = () =>\n\n// <Router>\n// <Fragment >\n//       <Navbar/>\n//       <Route exact path = '/' component={Landing}/>\n//     </Fragment>\n// </Router>\n//   // <Fragment>\n//   //   <Navbar />\n//   //   <Landing />\n//   // </Fragment>\n\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}