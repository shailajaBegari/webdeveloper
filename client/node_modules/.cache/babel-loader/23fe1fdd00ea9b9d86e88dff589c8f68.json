{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETED } from \"./types\"; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // CREATE OR UPDATE PROFILE\n\nexport const createProfile = function (formData, history) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.post(\"http://localhost:5000/api/profile\", formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n      if (!edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // //ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"http://localhost:5000/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // //ADD EDUCATION\n// export const  addEducation=(formData,history)=>async dispatch=>{\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/education\",formData,config);\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n//         dispatch(setAlert(\"Education Added\",\"success\"));\n//             history.push('/dashboard')\n//     } catch (err) {\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n//     }\n// }\n// //DELETE EXPERIENCE\n// export const deleteExperience= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/experience/${id}`)\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Experience Removed\",\"success\"));\n//     } catch (err) {\n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n// //DELETE EDUCATION\n// export const deleteEducation= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/education/${id}`)\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Education  Removed\",\"success\"));\n//     } catch (err) {\n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n// //DELETE ACCOUNT // PROFILE //\n// export const deleteAccount= () => async  dispatch=>{\n//     if(window.confirm('Are you sure? This can NOT be undone')){\n//          try {\n//             const res=await axios.delete(\"http://localhost:5000/api/profile\");\n//             dispatch({type:CLEAR_PROFILE });\n//             dispatch({type:ACCOUNT_DELETED})\n//             dispatch(setAlert(\"Your account has been permanately deleted\"));\n//         } catch (err) {\n//             dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })  \n//         }\n//         }\n// }","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {setAlert} from \"./alert\";\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED\n\n} from \"./types\";\n\n//GET CURRENT USERS PROFILE\n\n\nexport const getCurrentProfile=()=>async dispatch=>{\n\n        try {\n            const res=await axios.get('http://localhost:5000/api/profile/me')\n            \n            dispatch({\n                type:GET_PROFILE,\n                payload:res.data\n            });\n            \n        } catch (err) {\n            \n            dispatch({\n                type:PROFILE_ERROR,\n                payload: {msg:err.response.statusText,status:err.response.status}\n            })\n        }\n\n}\n\n\n// CREATE OR UPDATE PROFILE\n\nexport const createProfile=( formData,history,edit=false)=>async dispatch=>{\n    try {\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const res=await axios.post(\"http://localhost:5000/api/profile\",formData,config);\n\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        });\n\n        dispatch(setAlert(edit ? \"Profile Updated\":\"Profile Created\",\"success\"));\n\n        if(!edit){\n            history.push('/dashboard')\n        }\n\n    } catch (err) {\n\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })\n        \n    }\n};\n\n// //ADD EXPERIENCE\n\nexport const  addExperience=(formData,history)=>async dispatch=>{\n\n    try {\n        const config={\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const res=await axios.put(\"http://localhost:5000/api/profile/experience\",formData,config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        });\n\n        dispatch(setAlert(\"Experience Added\",\"success\"));\n\n            history.push('/dashboard')\n\n    } catch (err) {\n\n        const errors=err.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText,status:err.response.status}\n        })\n        \n    }\n\n}\n\n// //ADD EDUCATION\n\n// export const  addEducation=(formData,history)=>async dispatch=>{\n\n//     try {\n//         const config={\n//             headers:{\n//                 \"Content-Type\":\"application/json\"\n//             }\n//         }\n//         const res=await axios.put(\"http://localhost:5000/api/profile/education\",formData,config);\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         });\n\n//         dispatch(setAlert(\"Education Added\",\"success\"));\n\n//             history.push('/dashboard')\n\n//     } catch (err) {\n\n//         const errors=err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")))\n//         }\n//         dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })\n        \n//     }\n\n// }\n\n\n// //DELETE EXPERIENCE\n\n\n// export const deleteExperience= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/experience/${id}`)\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Experience Removed\",\"success\"));\n\n        \n//     } catch (err) {\n        \n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n\n// //DELETE EDUCATION\n\n// export const deleteEducation= id => async  dispatch=>{\n//     try {\n//         const res=await axios.delete(`http://localhost:5000/api/profile/education/${id}`)\n\n//         dispatch({\n//             type:UPDATE_PROFILE,\n//             payload:res.data\n//         })\n//         dispatch(setAlert(\"Education  Removed\",\"success\"));\n\n        \n//     } catch (err) {\n        \n//         dispatch({\n//         type:PROFILE_ERROR,\n//         payload:{msg:err.response.statusText,status:err.response.status}\n//     })  \n//     }\n// }\n\n\n\n// //DELETE ACCOUNT // PROFILE //\n\n\n// export const deleteAccount= () => async  dispatch=>{\n    \n\n//     if(window.confirm('Are you sure? This can NOT be undone')){\n\n//          try {\n//             const res=await axios.delete(\"http://localhost:5000/api/profile\");\n\n//             dispatch({type:CLEAR_PROFILE });\n//             dispatch({type:ACCOUNT_DELETED})\n\n//             dispatch(setAlert(\"Your account has been permanately deleted\"));\n\n            \n//         } catch (err) {\n            \n//             dispatch({\n//             type:PROFILE_ERROR,\n//             payload:{msg:err.response.statusText,status:err.response.status}\n//         })  \n//         }\n//         }\n\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}