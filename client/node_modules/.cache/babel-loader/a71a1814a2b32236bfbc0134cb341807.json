{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Nodejwt/socialmedia/client/src/componets/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute); // import React from 'react'\n// import {Route,Redirect} from \"react-router-dom\"\n// import PropTypes from \"prop-types\"\n// import {connect} from \"react-redux\"\n// import auth from '../../reducers/auth'\n// // import auth from '../../reducers/auth'\n// // import { Router } from 'react-router'\n// const PrivateRoute = ({component:Component,auth:{isAuthenticated,loading},...rest})=>(\n//         <Route  {...rest} \n//         render={\n//             props=> !auth.isAuthenticated && !loading ? (\n//                 <Redirect to=\"/login\"/>):(\n//                     <Component {...props}/>) }                \n//         />\n// )\n//     // component:Component,\n//     // auth:{isAuthenticated,loading},\n//     // ...rest\n//     //     }) =>(\n//     //         <Route \n//     //         {...rest}\n//     //         render={props=>\n//     //         !isAuthenticated && !loading ? (\n//     //             <Redirect to=\"/login\" />\n//     //         ):(<Component {...props} />)\n//     //     }\n//     //     />            \n//     //  );\n// PrivateRoute.propTypes={\n//     auth:PropTypes.object.isRequired\n// }\n// const mapStateToProps=state=>({\n//     auth:state.auth\n// })\n// export default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/dell/Desktop/Nodejwt/socialmedia/client/src/componets/routing/PrivateRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAACC,SAAZ;AAAsBC,IAAAA,IAAI,EAAC;AAACC,MAAAA,eAAD;AAAiBC,MAAAA;AAAjB,KAA3B;AAAqD,OAAGC;AAAxD,GAAD;AAAA,sBAEjB,QAAC,KAAD,OAAWA,IAAX;AAAkB,IAAA,MAAM,EAAEC,KAAK,IAAE,CAACH,eAAD,IAAoB,CAACC,OAArB,gBAC7B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAD6B,gBAEzB,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UAFiB;AAAA,CAArB;;KAAMP,Y;AASNA,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,IAAI,EAACL,SAAS,CAACW,MAAV,CAAiBC;AADD,CAAzB;;AAKA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC1BT,EAAAA,IAAI,EAACS,KAAK,CAACT;AADe,CAAH,CAA3B;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,YAAzB,CAAf,C,CAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\nimport {Route,Redirect} from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component:Component,auth:{isAuthenticated,loading},...rest}) => (\n\n    <Route {...rest}  render={props=>!isAuthenticated && !loading ? (\n        <Redirect to=\"/login\" />): (\n            <Component {...props} />)} />\n\n\n)\n\nPrivateRoute.propTypes = {\n    auth:PropTypes.object.isRequired,\n\n}\n\nconst mapStateToProps=state=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react'\n// import {Route,Redirect} from \"react-router-dom\"\n// import PropTypes from \"prop-types\"\n// import {connect} from \"react-redux\"\n// import auth from '../../reducers/auth'\n// // import auth from '../../reducers/auth'\n// // import { Router } from 'react-router'\n\n// const PrivateRoute = ({component:Component,auth:{isAuthenticated,loading},...rest})=>(\n\n//         <Route  {...rest} \n//         render={\n//             props=> !auth.isAuthenticated && !loading ? (\n//                 <Redirect to=\"/login\"/>):(\n//                     <Component {...props}/>) }                \n\n//         />\n\n// )\n//     // component:Component,\n//     // auth:{isAuthenticated,loading},\n//     // ...rest\n//     //     }) =>(\n//     //         <Route \n//     //         {...rest}\n//     //         render={props=>\n//     //         !isAuthenticated && !loading ? (\n//     //             <Redirect to=\"/login\" />\n//     //         ):(<Component {...props} />)\n//     //     }\n//     //     />            \n//     //  );\n\n\n\n\n// PrivateRoute.propTypes={\n//     auth:PropTypes.object.isRequired\n// }\n\n\n// const mapStateToProps=state=>({\n//     auth:state.auth\n// })\n\n// export default connect(mapStateToProps)(PrivateRoute);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}